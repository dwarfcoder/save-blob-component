/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface FileDownloader {
      'filename': string;
      'makeRequest': (url: string, options: any) => Promise<Blob>;
      'opts': any;
      'url': string;
    }
  }

  interface HTMLFileDownloaderElement extends StencilComponents.FileDownloader, HTMLStencilElement {}

  var HTMLFileDownloaderElement: {
    prototype: HTMLFileDownloaderElement;
    new (): HTMLFileDownloaderElement;
  };
  interface HTMLElementTagNameMap {
    'file-downloader': HTMLFileDownloaderElement;
  }
  interface ElementTagNameMap {
    'file-downloader': HTMLFileDownloaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'file-downloader': JSXElements.FileDownloaderAttributes;
    }
  }
  namespace JSXElements {
    export interface FileDownloaderAttributes extends HTMLAttributes {
      'filename'?: string;
      'opts'?: any;
      'url'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
